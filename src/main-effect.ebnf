MainEffects      ::= ((TriggeredAbility | ContinuousAbility) (WS WS)?)*

TriggeredAbility ::= TriggerEvent WS* DASH TriggerAction | TriggerEvent TriggerAction

ContinuousAbility ::= (WS*)? ("[]"*)? (TriggerActionCondition COLON)? WS* ContinousEffects

EchoAbility      ::= "{d}" COLON TriggerAction

TriggerEvent     ::= TriggerFromHand | TriggerFromReserve | TriggerEnterPlay | TriggerNoon | TriggerDusk | TriggerMoveToReserveFromExpedition | TriggerMoveToReserveFromHand | TriggerLeaveExpedition | TriggerExpeditionFailedToMove | TriggerPlaySpell | TriggerPlayPermanent | TriggerPlayCharacterWithStats0 | TriggerCharacterJoinsExpeditions | TriggerOppDrawOrResupply | TriggerSacrificeSelf | TriggerCardLeavesReserve | TriggerCreateToken | TriggerRollDice | TriggerCharacterGainsBoost | TriggerSelfGainBoost | TriggerExpeditionMoveDueToV

TriggerFromHand     ::= "{h}" WS*
TriggerEnterPlay    ::= "{j}" WS*
TriggerFromReserve  ::= "{r}" WS*

TriggerNoon         ::= "at noon"
TriggerDusk         ::= "at dusk"

TriggerLeaveExpedition              ::= "when i leave the expedition zone"
TriggerMoveToReserveFromExpedition  ::= "when i go to reserve from the expedition zone"
TriggerMoveToReserveFromHand        ::= "when i go to reserve from your hand"
TriggerExpeditionFailedToMove       ::= "when my expedition fails to move forward during dusk"
TriggerPlaySpell                    ::= "when you play a spell"
TriggerPlayPermanent                ::= "when you play a permanent" (TriggerPlayPermanentRestriction)?
TriggerPlayCharacterWithStats0      ::= "when you play another character with a base statistic of 0" 
TriggerCharacterJoinsExpeditions    ::= "when another" WS* CharacterRestrictionNontoken? WS* (CharacterType | "character") WS* "joins your expeditions"
TriggerOppDrawOrResupply            ::= "when an opponent draws one or more cards or does [resupply]"
TriggerSacrificeSelf                ::= "when i'm sacrificed"
TriggerCardLeavesReserve            ::= "when a card leaves your reserve during the afternoon"
TriggerCreateToken                  ::= "when you create a token"
TriggerRollDice                     ::= "when you roll one or more dice"
TriggerCharacterGainsBoost          ::= "when a character you control gains 1 or more boosts"
TriggerSelfGainBoost                ::= "when i gain 1 or more boosts"
TriggerExpeditionMoveDueToV         ::= "when one of your expeditions moves forward due to {v}"

TriggerActionCondition  ::= ("if" | ConditionInverse) WS* (ConditionControlLandmark | ConditionControlCharacters | ConditionControlCharacterTypes | ConditionControlToken | ConditionSelfHasBoosts | ConditionHaveManaOrbs | ConditionControlStats0)

CharacterRestrictionNontoken    ::= "non-token"
TriggerPlayPermanentRestriction ::= WS* (RestrictionHandCostLessThan | RestrictionHandCostMoreThan) WS*

ConditionSelfHasBoosts ::= "i have" Amount "or more boosts"
ConditionControlLandmark  ::= "you control" TextQuantity "landmark" "s"?
ConditionControlCharacters ::= "you control" TextQuantity ConditionControlBoosted? "character" "s"?
ConditionControlCharacterTypes ::= "you control" TextQuantity WS* CharacterType WS* ConditionOtherThanMe?
ConditionControlToken ::= "you control" TextQuantity "token" "s"?
ConditionHaveManaOrbs  ::= "you have" TextQuantity "mana orbs"
ConditionControlStats0 ::= "you have" TextQuantity "base statistics of 0 among characters you control"

ConditionInverse       ::= "unless"

ConditionControlBoosted ::= WS* "[[boosted]]" WS*

ConditionOtherThanMe  ::= "other than me"

TriggerActionCost   ::= ActionCostHandToReserve | ActionCostHandToReserveRestricted | ActionCostDiscardFromReserve | ActionCostDiscardManaOrb | ActionCostPayMana | ActionCostSacrifice

ActionCostHandToReserve ::= "you may put a card from your hand in reserve. if you do"
ActionCostHandToReserveRestricted ::= "you may put a card from your hand in reserve. if it's a" WS* CardType
ActionCostDiscardFromReserve ::= "you may discard a card from your reserve. if you do"
ActionCostPayMana  ::= "you may pay" ManaValue ". if you do"

ActionCostDiscardManaOrb    ::= "you may discard one of your mana orbs. if you do"

ActionCostSacrifice      ::= ActionCostSacrificeAny | ActionCostSacrificeSelf
ActionCostSacrificeAny   ::= "you may sacrifice" TextQuantity CardTypeDiscardable ". if you do"
ActionCostSacrificeSelf  ::= "you may sacrifice me. if you do"

AfterRestModifier      ::= "after rest:"

TriggerAction     ::= ((TriggerActionCondition | TriggerActionCost) COLON)? AfterRestModifier? WS* ("[]"*)? WS* ActionContents "."

ActionContents    ::= ActionDraw | ActionAllDraw | ActionOpponentDraw | ActionDiscardHandAndDraw | ActionDiscardHandReserveAndDraw | ActionAsleepAndBoost | ActionModifyStatus | ActionCostReduction | ActionCreateToken | ActionGainBoost | ActionRamp | ActionHandToReserve | ActionPickupFromReserve | ActionPickupFromReserveOtherThanMe | ActionOwnerSacrifice | ActionAllSacrifice | ActionExpeditionMovesBack | ActionRemoval | ActionPlayForFreeAsleep | ActionSabotage | ActionRollDieXBoosts | ActionRollDie4Plus | ActionActivateJTarget | ActionActivateJAll | ActionResupply | ActionAllResupply | ActionOpponentDiscard | ActionReturnToReserveIfNotFleeting | ActionSwitchExpedition

ActionCostReduction ::= "the next" CostReductionObject "you play this afternoon costs" ManaValue "less"
CostReductionObject ::= WS* (CardType | CharacterType | "card") WS*

ActionDraw      ::= "draw" TextQuantity "card" "s"? 
ActionAllDraw   ::= "each player draws" TextQuantity "card" "s"?
ActionOpponentDraw ::= "target opponent draws" TextQuantity "card" "s"?
ActionDiscardHandAndDraw ::= "each player discards their hand, then draws" TextQuantity "card" "s"?
ActionDiscardHandReserveAndDraw ::= "each player discards their hand and their reserve, then draws" TextQuantity "card" "s"?

ActionResupply  ::= "[resupply]"
ActionAllResupply ::= "each player may [resupply]"

ActionSacrificeSelfOptional ::= "you may sacrifice me"
ActionOwnerSacrifice    ::= "sacrifice" TextQuantity "character" "s"? (WS* SacrificeRestrictionMyExpedition)?
ActionAllSacrifice      ::= "each player sacrifices" TextQuantity "character" "s"?
SacrificeRestrictionMyExpedition ::= "in my expedition"


ActionReturnToReserveIfNotFleeting ::= "if i'm not [[fleeting]]: put me in reserve"

ActionSwitchExpedition  ::= "target character switches expedition"

ActionPlayForFreeAsleep ::= "you may play me for free and i gain" WS* CharacterStatusAsleep

ActionAsleepAndBoost    ::= "up to one target character gains [[asleep]]. you may have it gain" Amount "boosts"

ActionActivateJTarget   ::= "you may activate the {j} abilities of " ("up to" TextQuantity)? "target" WS* (CardTypePermanent | CardTypeCharacter) WS* "you control"
ActionActivateJAll ::= "for each" WS* (CardTypeCharacter | CardTypePermanent) WS* "you control" (" other than me")? ", you may activate its {j} abilities"

ActionModifyStatus      ::=  ActionTargetSelfBoostAndLoseStatus | ActionSelfGainStatus | ActionSelfLoseStatus | ActionTargetGainStatus | ActionTargetLoseStatus | ActionTargetOtherLoseStatus | ActionAllControlledGainStatus | ActionAllTargetExpeditionGainStatus
ActionSelfGainStatus    ::= "i gain" CharacterStatus
ActionSelfLoseStatus    ::= "i lose" CharacterStatus
ActionTargetGainStatusOne ::= "target character" WS* RestrictionOtherThanMe? WS* "gains" CharacterStatus
ActionTargetGainStatus  ::= ActionTargetGainStatusOne | "up to" TextQuantity "target character" "s"? WS* TargetStatusRestriction? "gain" "s"? CharacterStatus
ActionTargetLoseStatus  ::= "up to" TextQuantity "target character" "s"? WS* TargetStatusRestriction? "lose" "s"? CharacterStatus
ActionTargetOtherLoseStatus ::= "you may have target character other than me lose" CharacterStatus WS* ActionTargetOtherLoseStatusAndGainBoost?
ActionTargetSelfBoostAndLoseStatus ::= "i gain" Amount "boost" "s"? " and lose" CharacterStatus
ActionTargetOtherLoseStatusAndGainBoost ::= "and gain" Amount "boost" "s"?
ActionAllControlledGainStatus ::= "each character controlled by target player gains" CharacterStatus
ActionAllTargetExpeditionGainStatus ::= "all characters in target expedition gain" CharacterStatus

TargetStatusRestriction    ::= (RestrictionHandCostLessThan | RestrictionHandCostMoreThan)? WS* RestrictionOtherThanMe? WS*

ActionGainBoost            ::= ActionBoostForReserve | ActionBoostForLandmark | ActionSelfGainBoost | ActionTargetGainBoost | ActionMultiTargetGainBoost | ActionAllGainBoost | ActionAllTypeGainBoost 
ActionSelfGainBoost        ::= "i gain" Amount "boost" "s"?
ActionTargetGainBoost      ::= ("target character" WS* TargetBoostRestriction? | "up to one target" WS* CharacterType) WS* "gains" Amount "boost" "s"?
ActionMultiTargetGainBoost ::= "up to" TextQuantity "target characters each gain" Amount "boost" "s"?
ActionAllGainBoost         ::= "characters you control gain" Amount "boost" "s"?
ActionAllTypeGainBoost     ::= CharacterType WS* "you control other than me gain" Amount "boost" "s"? 
ActionBoostForReserve   ::= "i gain 1 boost for each card in" WS* (ActionBoostForReserveAllReserve | ActionBoostForReserveOwnReserve)
ActionBoostForReserveOwnReserve ::= "your reserve"
ActionBoostForReserveAllReserve ::= "each player's reserve"
ActionBoostForLandmark     ::= "i gain 1 boost for each landmark you control"

TargetBoostRestriction     ::= RestrictionInOtherExpedition

ActionRollDie4Plus         ::= "roll a die. on a 4+" (","|":") WS* ActionContents WS* ActionRollDieOtherwise?
ActionRollDieOtherwise     ::= ". otherwise," WS* ActionContents

ActionRollDieXBoosts        ::= "roll a die." DieBoostSubject "gain" "s"? " x boosts, where x is the result"
DieBoostSubject            ::= WS* (DieBoostSelf | DieBoostTargetCharacter) WS*
DieBoostSelf               ::= "i"
DieBoostTargetCharacter    ::= "up to one target character" | "target character"

ActionCreateToken       ::= "create" WS* TextQuantity WS* TokenType WS* "token" "s"? ","? WS* CreateTokenLocation

TokenType               ::= TokenTypeOrdisRecruit | TokenTypeBrassbug
TokenTypeOrdisRecruit   ::= "[ordis recruit 1/1/1] soldier"
TokenTypeBrassbug       ::= "[brassbug 2/2/2] robot"

CreateTokenLocation     ::= CreateTokenLocationMyExpedition | CreateTokenLocationOtherExpedition | CreateTokenLocationEachExpedition | CreateTokenLocationTargetExpedition | CreateTokenLocationHeroExpedition | CreateTokenLocationCompanionExpedition | CreateTokenLocationDistributed
CreateTokenLocationMyExpedition     ::= "in my expedition"
CreateTokenLocationOtherExpedition  ::= "in your other expedition (the one i'm not in)"?
CreateTokenLocationEachExpedition   ::= "in each of your expeditions"
CreateTokenLocationTargetExpedition ::= "in target expedition"
CreateTokenLocationHeroExpedition   ::= "in your hero expedition"
CreateTokenLocationCompanionExpedition ::= "in your companion expedition"
CreateTokenLocationDistributed      ::= "distributed as you choose among any number of target expeditions"

ActionSabotage          ::= "[sabotage]"

ActionRamp              ::= ActionRampBothPlayers | ActionRampMoveMe | ActionRampFromDeckOne | ActionRampFromDeckMany
ActionRampBothPlayers   ::= "each player puts the top card of their deck in their mana zone (as an exhausted mana orb)"
ActionRampMoveMe        ::= ActionOptional? WS* "put me in my owner's mana zone (as an exhausted mana orb)" (ActionRampMoveMeOtherwiseDraw)?
ActionRampFromDeckOne   ::= "put the top card of your deck in your mana zone (as an exhausted mana orb)"
ActionRampFromDeckMany  ::= "put the top" TextQuantity "cards of your deck in your mana zone (as exhausted mana orbs)"

ActionRampMoveMeOtherwiseDraw ::= ". if you don't, draw a card"

ActionHandToReserve     ::= "you may put a card from your hand in reserve"
ActionPickupFromReserve ::= "you may return a" WS* (CardType | "card") WS* "from your reserve to your hand"
ActionPickupFromReserveOtherThanMe ::= "you may return a card other than me from your reserve to your hand"

ActionExpeditionMovesBack       ::= "your opponent's expedition facing me moves backwards one region"

ActionOpponentDiscard     ::= "target opponent discards a card from their hand"

ActionRemoval             ::= ActionRemoveDiscard | ActionReturnToHand | ActionSendToReserveCondition | ActionSendToReserve | ActionSendToTopDeck | ActionSendToManaOrb

ActionRemoveDiscard       ::= "you may discard target" ActionRemovalStatusRestriction? CardTypeDiscardable ActionRemovalRestrictions?
ActionReturnToHand        ::= "you may return target" CardTypeDiscardable ActionRemovalRestrictions? " to its owner's hand"
ActionSendToReserve       ::= "you may send target character to reserve"
ActionSendToReserveCondition ::= "you may send to reserve target character" WS* ActionRemovalRestrictions
ActionSendToTopDeck       ::= "you may return target" CardTypeDiscardable "to the top of its owner's deck"
ActionSendToManaOrb       ::= "you may put target" CardTypeDiscardable "in its owner's mana zone (as an exhausted mana orb)"

ActionRemovalStatusRestriction ::= CharacterStatus
ActionRemovalRestrictions ::= RestrictionHandCostLessThanCharacters | RestrictionHandCostMoreThan | RestrictionHandCostLessThan

RestrictionOtherThanMe      ::= "other than me"
RestrictionHandCostLessThan ::= "with hand cost" ManaValue "or less"
RestrictionHandCostMoreThan ::= "with hand cost" ManaValue "or more"
RestrictionHandCostLessThanCharacters ::= "with hand cost {x} or less, where x is the number of characters you control"
RestrictionInOtherExpedition ::= "in your other expedition (the one i'm not in)"?

CharacterStatus         ::= WS* (CharacterStatusChooseAny | CharacterStatusFleeting | CharacterStatusAnchored | CharacterStatusAsleep) WS*
CharacterStatusChooseAny ::= "[[fleeting]], [[anchored]] or [[asleep]]"
CharacterStatusFleeting ::= "[[fleeting]]"
CharacterStatusAnchored ::= "[[anchored]]"
CharacterStatusAsleep   ::= "[[asleep]]"

ActionOptional      ::= "you may"


ContinousEffects  ::= (ContinousEffectContentNotEndingWithPeriod) | (ContinousEffectContent ".")

ContinousEffectContent ::= EffectExpeditionCantMoveForward | EffectOtherCharactersAre | EffectTokensYouControlAre | EffectIAm | EffectKraken | EffectMinimumManaToPlay | EffectReducedCost | EffectToughXRegions | EffectPreventJHR | EffectTax | EffectExtraRoll | EffectResupplyLookAt2

ContinousEffectContentNotEndingWithPeriod ::= (EffectCharactersHaveR | EffectRollAddOne)

EffectIAm           ::= "i am" WS* AbilityWord
EffectOtherCharactersAre   ::= "characters you control other than me are" WS* AbilityWord
EffectTokensYouControlAre ::= "tokens you control are" WS* AbilityWord
EffectExpeditionCantMoveForward ::= "your other expedition (the one i'm not in) and the expedition facing it can't move forward"
EffectCharactersHaveR ::= 'your characters have: "{r} i gain' Amount 'boost."'
EffectKraken        ::= "all regions are {o} and lose their other types"
EffectMinimumManaToPlay ::= "i can't be played if you have less than" TextQuantity "mana orbs"
EffectReducedCost   ::= "i cost" ManaValue "less"
EffectToughXRegions ::= "i am [tough x], where x is the number of regions between your hero and companion"
EffectPreventJHR    ::= "the {j}, {h} and {r} abilities of characters facing me can't activate"
EffectTax           ::= (CardTypeCharacter | "cards") WS* "your opponents play cost" ManaValue "more"
EffectExtraRoll     ::= "if you would roll one or more dice, instead roll that many dice plus one and ignore the roll of your choice"
EffectRollAddOne    ::= "if you would roll a die, you may add 1 to its result. (choose after you see the result.)"
EffectResupplyLookAt2 ::= "if you would [resupply], instead look at the top two cards of your deck. put one in reserve, and discard the other"

AbilityWord         ::= AbilityTough1 | AbilityTough2 | AbilityGigantic | AbilitySeasoned | AbilityDefender | AbilityEternal
AbilityTough1       ::= "[tough 1]"
AbilityTough2       ::= "[tough 2]"
AbilityGigantic     ::= "[gigantic]"
AbilitySeasoned     ::= "[seasoned]"
AbilityDefender     ::= "[defender]"
AbilityEternal      ::= "[eternal]"

CardType            ::= WS* (CardTypePermanent | CardTypeCharacter | CardTypeSpell) WS*
CardTypeDiscardable ::= WS* (CardTypeCharacterOrPermanent | CardTypePermanent | CardTypeCharacter) WS*

CardTypePermanent   ::= "permanent" "s"?
CardTypeCharacter   ::= "character" "s"?
CardTypeSpell       ::= "spell" "s"?
CardTypeCharacterOrPermanent ::= "character" "s"? " or permanent" "s"?

TextQuantity    ::= WS* (TextQuantity1 | TextQuantity2 | TextQuantity3 | TextQuantity4 | TextQuantity5 | TextQuantity6 | TextQuantity7 | TextQuantity8) TextQuantityOrMore? WS*
TextQuantity1   ::= "one" | "an" | "a"
TextQuantity2   ::= "two"
TextQuantity3   ::= "three"
TextQuantity4   ::= "four"
TextQuantity5   ::= "five"
TextQuantity6   ::= "six"
TextQuantity7   ::= "seven"
TextQuantity8   ::= "eight"
TextQuantityOrMore   ::= " or more"

CharacterType       ::= CharacterTypePlant | CharacterTypeRobot | CharacterTypeBureaucrat
CharacterTypePlant  ::= "plant" "s"?
CharacterTypeRobot  ::= "robot" "s"?
CharacterTypeBureaucrat ::= "bureaucrat" "s"?

ManaValue           ::= WS* '{' DIGIT+ '}' WS*
Amount              ::= WS* (DIGIT+) WS*

DASH                ::= WS* DASH_SYMBOL WS*
COLON               ::= WS* COLON_SYMBOL WS*

DIGIT               ::= ([#x30-#x39])
WS                  ::= ([#x20] | [#x00A0]) 
DASH_SYMBOL         ::= "—"
COLON_SYMBOL        ::= ":"
